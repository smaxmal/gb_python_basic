"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class ThatIsEnoughException(Exception):
    pass


class MyValueError(TypeError):
    def __init__(self, msg):
        super().__init__(msg)


def safe_convert(value: str):
    """ Преобразует строку к действительному числу, если это возможно """

    if value == 'стоп':
        raise ThatIsEnoughException

    try:
        result = float(value)
    except ValueError:
        raise MyValueError('Это не число')

    if result.is_integer():
        result = int(result)

    return result


# main
if __name__ == '__main__':
    my_list = []
    while True:
        input_str = input('Введите число или "стоп" для выхода\n>>>')
        try:
            my_list.append(safe_convert(input_str))
        except MyValueError as e:
            print(e)
        except ThatIsEnoughException:
            break
    print(my_list)
